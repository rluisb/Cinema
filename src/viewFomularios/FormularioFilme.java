/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewFomularios;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import model.Filme;
import servico.FilmeServico;
import controller.FilmeController;
import javax.swing.JLabel;
import javax.swing.JTextField;
import java.awt.Dimension;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Font;
import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.FormSpecs;
import com.jgoodies.forms.layout.RowSpec;

public class FormularioFilme extends javax.swing.JPanel {
    
    FilmeServico servicoFilme;
    FilmeController controller;

    /**
     * Creates new form PainelFormularioFilme
     */
    public FormularioFilme() {
        servicoFilme = new FilmeServico();
        controller = new FilmeController();
        initComponents();
    }
    
    public FormularioFilme(FilmeController control){
        servicoFilme = new FilmeServico();
        controller = control;
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbCadastrar = new javax.swing.JButton();
        jbCadastrar.setFont(new Font("Tahoma", Font.PLAIN, 15));
        txtNome = new javax.swing.JTextField();
        jLableId = new javax.swing.JLabel();
        jLabelMensagem = new javax.swing.JLabel();
        botaoVoltar = new javax.swing.JButton();
        botaoVoltar.setFont(new Font("Tahoma", Font.PLAIN, 15));
        txtId = new javax.swing.JTextField();
        jLabelNome = new javax.swing.JLabel();

        setPreferredSize(new Dimension(476, 384));

        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });
        jbCadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCadastrarKeyPressed(evt);
            }
        });

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeActionPerformed(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNomeKeyPressed(evt);
            }
        });

        jLableId.setFont(new Font("Tahoma", Font.PLAIN, 15)); // NOI18N
        jLableId.setText("ID:");

        jLabelMensagem.setFont(new Font("Tahoma", Font.BOLD, 25)); // NOI18N
        jLabelMensagem.setText("Cadastro de Filmes");

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCodKeyPressed(evt);
            }
        });

        jLabelNome.setFont(new Font("Tahoma", Font.PLAIN, 15)); // NOI18N
        jLabelNome.setText("Nome: ");
        
        JLabel lblSinopse = new JLabel("Sinopse:");
        lblSinopse.setFont(new Font("Tahoma", Font.PLAIN, 15));
        
        txtSinopse = new JTextField();
        txtSinopse.setColumns(10);
        
        lblGenero = new JLabel("Genero:");
        lblGenero.setFont(new Font("Tahoma", Font.PLAIN, 15));
        
        txtGenero = new JTextField();
        txtGenero.setColumns(10);
        GroupLayout groupLayout = new GroupLayout(this);
        groupLayout.setHorizontalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(205)
        					.addComponent(txtNome, GroupLayout.PREFERRED_SIZE, 158, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(205)
        					.addComponent(txtSinopse, GroupLayout.PREFERRED_SIZE, 158, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(106)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(groupLayout.createSequentialGroup()
        							.addComponent(jbCadastrar)
        							.addGap(48)
        							.addComponent(botaoVoltar, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE))
        						.addGroup(groupLayout.createSequentialGroup()
        							.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
        								.addComponent(lblSinopse)
        								.addComponent(lblGenero)
        								.addComponent(jLabelNome))
        							.addGap(47)
        							.addComponent(txtGenero, GroupLayout.PREFERRED_SIZE, 158, GroupLayout.PREFERRED_SIZE))))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(123)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(groupLayout.createSequentialGroup()
        							.addComponent(jLableId)
        							.addGap(61)
        							.addComponent(txtId, GroupLayout.PREFERRED_SIZE, 158, GroupLayout.PREFERRED_SIZE))
        						.addComponent(jLabelMensagem))))
        			.addGap(113))
        );
        groupLayout.setVerticalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(11)
        			.addComponent(jLabelMensagem, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE)
        			.addGap(48)
        			.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(txtId, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addGap(6)
        					.addComponent(txtNome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(jLableId)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jLabelNome)))
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(5)
        					.addComponent(txtSinopse, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(lblSinopse)))
        			.addGap(6)
        			.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtGenero, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblGenero))
        			.addGap(85)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(botaoVoltar)
        				.addComponent(jbCadastrar)))
        );
        setLayout(groupLayout);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        if(jbCadastrar.getText().equalsIgnoreCase("Editar")){
            editarFilme();
            controller.voltarPrincipal();
        }else{
            cadastrarFilme();
            controller.voltarPrincipal();
        }
    }//GEN-LAST:event_jbCadastrarActionPerformed
    
    public void cadastrarFilme() {
        try {
        	String nome = txtNome.getText();
            String sinopse = txtSinopse.getText();
            String genero = txtGenero.getText();
            if (servicoFilme.nomeFilmeExiste(nome)) {
                JOptionPane.showMessageDialog(this, "Filme ja existente no cadastro", "Erro: Filme Existente", JOptionPane.ERROR_MESSAGE);
            } else if (nome.matches("\\s*")) {
                JOptionPane.showMessageDialog(this, "Erro: NOME VAZIO!!!", "Erro: NOME em branco", JOptionPane.ERROR_MESSAGE);
            } else {
                servicoFilme.addFilme(new Filme(nome, sinopse, genero));
                JOptionPane.showMessageDialog(this, "Filme cadastrado com sucesso!");                
            }            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao Cadastrar o Filme", "Erro: Inesperado", JOptionPane.ERROR_MESSAGE);
        }

    }
    
    private void editarFilme() {
        //servicoA.mostrarAvioes();
        try {
            int idUpdate = (Integer.parseInt(txtId.getText()));
            if (servicoFilme.filmeExiste(idUpdate)) {
                String nome = txtNome.getText();
                String sinopse = txtSinopse.getText();
                String genero = txtGenero.getText();
                if (servicoFilme.nomeFilmeExiste(nome)) {
                    JOptionPane.showMessageDialog(this, "Avião já existente no cadastro", "Erro: Avião Existente", JOptionPane.ERROR_MESSAGE);
                } 
                else if (nome.matches("\\s*")) {
                    JOptionPane.showMessageDialog(this,"Erro: NOME VAZIO!!!", "Erro: NOME em branco", JOptionPane.ERROR_MESSAGE);
                } else {
                    servicoFilme.atualizaFilme(new Filme(idUpdate, nome, sinopse, genero));
                    JOptionPane.showMessageDialog(this,"Avião " + nome + " atualizado com sucesso!");
                }
            }            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao Editar o avião", "Erro: Inesperado", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public void carregaDados(int cod, String nome, String sinopse, String genero){
        this.txtId.setText(Integer.toString(cod));
        this.txtNome.setText(nome);
        this.txtSinopse.setText(sinopse);
        this.txtGenero.setText(genero);
    }

    public void limparCampoNome() {
        txtNome.setText("");
    }
    
    public javax.swing.JButton getJbCadastrar() {
        return jbCadastrar;
    }
    
    public void habilitaEdicaoFormFilme(boolean valor) {
        this.txtId.setEditable(false);
        this.txtNome.setEditable(valor);        
    }

    public JLabel getJlabelCod() {
        return jLableId;
    }

    public void setJlabelCod(JLabel jlabelCod) {
        this.jLableId = jlabelCod;
    }

    public JTextField getJtCod() {
        return txtId;
    }

    public void setJtCod(JTextField jtCod) {
        this.txtId = jtCod;
    }
    
    public javax.swing.JLabel getjLabelMensagem() {
        return jLabelMensagem;
    }

    public void setjLabelMensagem(javax.swing.JLabel jLabelMensagem) {
        this.jLabelMensagem = jLabelMensagem;
    }
    
    private void jbCadastrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCadastrarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(jbCadastrar.getText().equalsIgnoreCase("Editar")){
            editarFilme();
            controller.voltarPrincipal();
            }else{
            cadastrarFilme();
            controller.voltarPrincipal();
            }            
        }
    }//GEN-LAST:event_jbCadastrarKeyPressed

    private void jtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(jbCadastrar.getText().equalsIgnoreCase("Editar")){
            editarFilme();
            controller.voltarPrincipal();
            }else{
            cadastrarFilme();
            controller.voltarPrincipal();
            }            
        }
    }//GEN-LAST:event_jtNomeKeyPressed

    private void jtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeActionPerformed
        // Ao clicar no campo nome não dispara evento 
    }//GEN-LAST:event_jtNomeActionPerformed

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        controller.voltarPrincipal();
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void jtCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodActionPerformed
        // // Ao clicar no campo código não dispara evento
    }//GEN-LAST:event_jtCodActionPerformed

    private void jtCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCodKeyPressed
        // // Ao pressionar ENTER no campo código não dispara evento
    }//GEN-LAST:event_jtCodKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelMensagem;
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JLabel jLableId;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private JTextField txtSinopse;
    private JLabel lblGenero;
    private JTextField txtGenero;
}
