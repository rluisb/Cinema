package viewFomularios;

import model.Voo;
import servico.VooServico;
import controller.VooController;
import java.text.ParseException;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.Aviao;
import model.Ponte_Aerea;
import util.DateUtil;
import servico.AviaoServico;
import javax.swing.JComboBox;
import javax.swing.JLabel;

/**
 *
 * @author Thiago
 */
public class FormularioVoo extends javax.swing.JPanel {

    private AviaoServico servicoA;
    private VooServico servicoV;
    private VooController controller;

    /**
     * Creates new form FormularioVoo
     */
    public FormularioVoo(VooController control) {
        servicoA = new AviaoServico();
        servicoV = new VooServico();
        controller = control;
        initComponents();

//        jComboBoxAviao.setModel(new AviaoComboBoxModel(servicoA.listarAviao()));
    }

    public FormularioVoo() {
        servicoV = new VooServico();
        controller = new VooController();
        servicoA = new AviaoServico();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelMensagem = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTData = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jTHora = new javax.swing.JFormattedTextField();
        jBCadastrar = new javax.swing.JButton();
        jBVoltar = new javax.swing.JButton();
        jLabelID = new javax.swing.JLabel();
        jtID = new javax.swing.JTextField();
        jLabelHoraIdeal = new javax.swing.JLabel();
        jLabelDataIdeal = new javax.swing.JLabel();
        jComboBoxAviao = new javax.swing.JComboBox();
        jComboBoxPonte = new javax.swing.JComboBox();

        jLabelMensagem.setFont(new java.awt.Font("Times New Roman", 3, 30)); // NOI18N
        jLabelMensagem.setText("Preencha os Dados do Voo");

        jLabel2.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel2.setText("Avi√£o:");

        jLabel3.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel3.setText("Ponte:");

        jLabel4.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel4.setText("Data da partida:");

        jTData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM))));
        jTData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTDataActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel5.setText("Hora da Partida");

        jTHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        jBCadastrar.setFont(new java.awt.Font("Lucida Console", 1, 16)); // NOI18N
        jBCadastrar.setText("Cadastrar");
        jBCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarActionPerformed(evt);
            }
        });

        jBVoltar.setFont(new java.awt.Font("Lucida Console", 1, 16)); // NOI18N
        jBVoltar.setText("Voltar");
        jBVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVoltarActionPerformed(evt);
            }
        });

        jLabelID.setVisible(false);
        jtID.setVisible(false);
        jLabelID.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabelID.setText("ID:");

        jLabelID.setVisible(false);
        jtID.setVisible(false);

        jLabelHoraIdeal.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabelHoraIdeal.setText("Formato indicado HH:MM");

        jLabelDataIdeal.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabelDataIdeal.setText("Formato indicado DD/MM/AAAA");

        jComboBoxAviao.setModel(new comboBoxModel.AviaoComboBoxModel());
        jComboBoxAviao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAviaoActionPerformed(evt);
            }
        });

        jComboBoxPonte.setModel(new comboBoxModel.PonteComboBoxModel());
        jComboBoxPonte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPonteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabelID))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jBCadastrar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTData, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTHora, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(jBVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxAviao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxPonte, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHoraIdeal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDataIdeal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabelMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabelMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelID)
                    .addComponent(jtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAviao, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxPonte, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDataIdeal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHoraIdeal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarActionPerformed
        if(getjBCadastrar().getText().equalsIgnoreCase("Editar")){
            editarVoo();
            controller.voltarPrincipal();
        }
        else{
            cadastrarVoo();
            controller.voltarPrincipal();            
        }
        
    }//GEN-LAST:event_jBCadastrarActionPerformed

    private void jComboBoxAviaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAviaoActionPerformed
        //JOptionPane.showConfirmDialog(this, "Teste");
    }//GEN-LAST:event_jComboBoxAviaoActionPerformed

    private void jTDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTDataActionPerformed

    private void jBVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVoltarActionPerformed
        controller.voltarPrincipal();
    }//GEN-LAST:event_jBVoltarActionPerformed

    private void jComboBoxPonteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPonteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPonteActionPerformed
    public void cadastrarVoo() {
        //System.out.println("Selecione o Avi√£o para realizar esse V√¥o: ");
        //servicoA.mostrarAvioes();
        try {
            Aviao aviaoSelected = (Aviao) jComboBoxAviao.getSelectedItem();
            int codigo = aviaoSelected.getCodigo();
            if (servicoA.aviaoExiste(codigo)) {
                Aviao aviao = servicoA.entregaAviao(codigo);
                Date horaDoVoo = null;
                //boolean dataValida;
                //do {
                try {
                    String dataHora = jTData.getText();
                    horaDoVoo = DateUtil.stringToDateHour(dataHora + " " + jTHora.getText());
                    //dataValida = true;
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(this, "Data e hora no formato inv√°lido!", "Erro: Formato inv√°lido", JOptionPane.ERROR_MESSAGE);
                    //dataValida = false;
                }
                //} while (!dataValida);
                //servicoV.mostrarPontes();

                try {
                    Ponte_Aerea ponteSelect = (Ponte_Aerea) jComboBoxPonte.getSelectedItem();
                    int opPonte = ponteSelect.getId();
                    if (servicoV.ponteExiste(opPonte)) {
                        Ponte_Aerea ponte = servicoV.entregaPonte(opPonte);
                        servicoV.addVoo(new Voo(ponte, horaDoVoo, aviao));
                        JOptionPane.showMessageDialog(this, "Voo cadastrado com sucesso!!!");
                    } else {
                        JOptionPane.showMessageDialog(this, "N√£o Existe uma ponte a√©rea com esse c√≥digo!!!\n Voo n√£o cadastrado.", "Erro: N√£o Encontrado", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao selecionar a ponte ou ponte n√£o selecionada", "Erro: Sele√ß√£o n√£o realizada", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao selecionar o avi√£o ou avi√£o n√£o selecionado\nVoo n√£o cadastrado.", "Erro: Sele√ß√£o n√£o realizada", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao selecionar o avi√£o ou avi√£o n√£o selecionado\nVoo n√£o cadastrado.", "Erro: Sele√ß√£o n√£o realizada", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void editarVoo() {
//        servicoV.mostrarVoos();
        int idVooUpdate = (Integer.parseInt(jtID.getText()));
        if (servicoV.vooExiste(idVooUpdate)) {
          Aviao aviaoSelected = (Aviao) jComboBoxAviao.getSelectedItem();
            int codigoAviao = aviaoSelected.getCodigo();
            if (servicoA.aviaoExiste(codigoAviao)) {
                Aviao aviao = servicoA.entregaAviao(codigoAviao);
                Date horaDoVoo = null;
//                boolean dataValida;
//                do {
                    try {
                        String dataHora = jTData.getText();
                        horaDoVoo = DateUtil.stringToDateHour(dataHora + " " + jTHora.getText());
//                        dataValida = true;
                    } catch (ParseException ex) {
                        JOptionPane.showMessageDialog(this, "Data e hora no formato inv√°lido!", "Erro: Formato inv√°lido", JOptionPane.ERROR_MESSAGE);
//                        dataValida = false;
                    }
//                } while (!dataValida);
//                servicoV.mostrarPontes();
                Ponte_Aerea ponteSelect = (Ponte_Aerea) jComboBoxPonte.getSelectedItem();
                int opPonte = ponteSelect.getId();
                if (servicoV.ponteExiste(opPonte)) {
                    Ponte_Aerea ponteSelecionada = servicoV.entregaPonte(opPonte);

                    servicoV.atualizaVoo(new Voo(idVooUpdate, ponteSelecionada, horaDoVoo, aviao));
                    JOptionPane.showMessageDialog(this, "Voo atualizado com sucesso!!!");
                } else {
                    JOptionPane.showMessageDialog(this, "N√£o Existe uma ponte a√©rea com esse c√≥digo!!!\n Voo n√£o cadastrado.", "Erro: N√£o Encontrado", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao selecionar o avi√£o ou avi√£o n√£o selecionado\nVoo n√£o cadastrado.", "Erro: Sele√ß√£o n√£o realizada", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void carregaDados(int id, Aviao aviao, Ponte_Aerea ponte, Date dataHora) {
        this.jtID.setText(Integer.toString(id));
        this.jComboBoxAviao.getModel().setSelectedItem(aviao);  
        this.jComboBoxPonte.getModel().setSelectedItem(ponte);
        this.jTData.setText(DateUtil.dateToString(dataHora));
        this.jTHora.setText(DateUtil.getHourFromDateToString(dataHora));
    }

    public void limparCampos() {
        jtID.setText("");
        jComboBoxAviao.setSelectedIndex(-1);
        jComboBoxPonte.setSelectedIndex(-1);
        jTData.setText("");
        jTHora.setText("");
    }

    public JButton getjBCadastrar() {
        return jBCadastrar;
    }

    public JButton getjBVoltar() {
        return jBVoltar;
    }

    public JComboBox getjComboBoxAviao() {
        return jComboBoxAviao;
    }

    public JFormattedTextField getjTData() {
        return jTData;
    }

    public JFormattedTextField getjTHora() {
        return jTHora;
    }

    public JTextField getjtID() {
        return jtID;
    }
    
    public javax.swing.JLabel getjLabelDataIdeal() {
        return jLabelDataIdeal;
    }

    public javax.swing.JLabel getjLabelHoraIdeal() {
        return jLabelHoraIdeal;
    }

    public JComboBox getjComboBoxPonte() {
        return jComboBoxPonte;
    }

    public JLabel getjLabelMensagem() {
        return jLabelMensagem;
    }

    public JLabel getjLabelID() {
        return jLabelID;
    }

    public void habilitaEdicaoFormVoo(boolean valor) {
        this.jtID.setEditable(false);
        this.jComboBoxAviao.setEditable(valor);//depois mudar para fazer a ideia que eu tenho de n√£o permitir e abrir uma tela que selecionar√° a informa√ß√£o dos campos
        this.jComboBoxPonte.setEditable(valor);
        this.jTData.setEditable(valor);
        this.jTHora.setEditable(valor);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCadastrar;
    private javax.swing.JButton jBVoltar;
    private javax.swing.JComboBox jComboBoxAviao;
    private javax.swing.JComboBox jComboBoxPonte;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelDataIdeal;
    private javax.swing.JLabel jLabelHoraIdeal;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelMensagem;
    private javax.swing.JFormattedTextField jTData;
    private javax.swing.JFormattedTextField jTHora;
    private javax.swing.JTextField jtID;
    // End of variables declaration//GEN-END:variables
}
